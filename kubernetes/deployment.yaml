apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-backend-deployment
  labels:
    app: node-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-backend
  template:
    metadata:
      labels:
        app: node-backend
    spec:
      serviceAccountName: cloudsql-sa
      containers:
        - name: node-backend-container
          image: gcr.io/<YOUR_PROJECT_ID>/healthcare-backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: name
            - name: DB_PORT
              value: "5432"
            - name: DB_HOST
              value: "127.0.0.1"
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.0
          command:
            - "/cloud_sql_proxy"
            - "-instances=cbse-2024ii-438216:us-central1:postgres-sql=tcp:5432" # Â¡Reemplaza con los valores de tu instancia SQL!
            - "-ip_address_types=PRIVATE"
          securityContext:
            runAsNonRoot: true
